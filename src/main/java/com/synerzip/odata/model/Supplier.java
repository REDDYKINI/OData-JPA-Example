package com.synerzip.odata.model;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

/**
 * Object mapping for hibernate-handled table: supplier.
 * 
 * @author autogenerated
 */

@Entity
@Table(name = "supplier")
public class Supplier implements Cloneable, Serializable {

	/** Serial Version UID. */
	private static final long serialVersionUID = -558893100L;

	/** Field mapping. */
	@Basic(optional = true)
	@Column(name = "supplier_city", length = 30)
	private String supplierCity;

	/** Field mapping. */
	@Id
	@Basic(optional = false)
	@Column(name = "supplier_id", nullable = false, length = 10)
	private String supplierId;

	/** Field mapping. */
	@Basic(optional = true)
	@Column(name = "supplier_name", length = 30)
	private String supplierName;

	/** Field mapping. */
	@Basic(optional = true)
	@Column(name = "supplier_state", length = 2)
	private String supplierState;

	/** Field mapping. */
	@Basic(optional = true)
	@Column(name = "supplier_status")
	private BigDecimal supplierStatus;

	/** Many-to-many mapping with additional columns in join table */
	@OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "supplier")
	private Set<SupplierParts> supplierParts = new HashSet<SupplierParts>();

	/**
	 * Return the type of this class. Useful for when dealing with proxies.
	 * 
	 * @return Defining class.
	 */
	@Transient
	public Class<?> getClassType() {
		return Supplier.class;
	}

	/**
	 * Return the value associated with the column: supplierCity.
	 * 
	 * @return A String object (this.supplierCity)
	 */
	public String getSupplierCity() {
		return this.supplierCity;

	}

	/**
	 * Set the value related to the column: supplierCity.
	 * 
	 * @param supplierCity
	 *            the supplierCity value you wish to set
	 */
	public void setSupplierCity(final String supplierCity) {
		this.supplierCity = supplierCity;
	}

	/**
	 * Return the value associated with the column: supplierId.
	 * 
	 * @return A String object (this.supplierId)
	 */
	public String getSupplierId() {
		return this.supplierId;

	}

	/**
	 * Set the value related to the column: supplierId.
	 * 
	 * @param supplierId
	 *            the supplierId value you wish to set
	 */
	public void setSupplierId(final String supplierId) {
		this.supplierId = supplierId;
	}

	/**
	 * Return the value associated with the column: supplierName.
	 * 
	 * @return A String object (this.supplierName)
	 */
	public String getSupplierName() {
		return this.supplierName;

	}

	/**
	 * Set the value related to the column: supplierName.
	 * 
	 * @param supplierName
	 *            the supplierName value you wish to set
	 */
	public void setSupplierName(final String supplierName) {
		this.supplierName = supplierName;
	}

	/**
	 * Return the value associated with the column: supplierState.
	 * 
	 * @return A String object (this.supplierState)
	 */
	public String getSupplierState() {
		return this.supplierState;

	}

	/**
	 * Set the value related to the column: supplierState.
	 * 
	 * @param supplierState
	 *            the supplierState value you wish to set
	 */
	public void setSupplierState(final String supplierState) {
		this.supplierState = supplierState;
	}

	/**
	 * Return the value associated with the column: supplierStatus.
	 * 
	 * @return A BigDecimal object (this.supplierStatus)
	 */
	public BigDecimal getSupplierStatus() {
		return this.supplierStatus;

	}

	/**
	 * Set the value related to the column: supplierStatus.
	 * 
	 * @param supplierStatus
	 *            the supplierStatus value you wish to set
	 */
	public void setSupplierStatus(final BigDecimal supplierStatus) {
		this.supplierStatus = supplierStatus;
	}

	/**
	 * @return the supplierParts
	 */
	public Set<SupplierParts> getSupplierParts() {
		return supplierParts;
	}

	/**
	 * @param supplierParts
	 *            the supplierParts to set
	 */
	public void setSupplierParts(Set<SupplierParts> supplierParts) {
		this.supplierParts = supplierParts;
	}

	/**
	 * Deep copy.
	 * 
	 * @return cloned object
	 * @throws CloneNotSupportedException
	 *             on error
	 */
	@Override
	public Supplier clone() throws CloneNotSupportedException {

		final Supplier copy = (Supplier) super.clone();

		copy.setSupplierCity(this.getSupplierCity());
		copy.setSupplierId(this.getSupplierId());
		copy.setSupplierName(this.getSupplierName());
		copy.setSupplierState(this.getSupplierState());
		copy.setSupplierStatus(this.getSupplierStatus());
		return copy;
	}

	/**
	 * Provides toString implementation.
	 * 
	 * @see java.lang.Object#toString()
	 * @return String representation of this class.
	 */
	@Override
	public String toString() {
		StringBuffer sb = new StringBuffer();

		sb.append("supplierCity: " + this.getSupplierCity() + ", ");
		sb.append("supplierId: " + this.getSupplierId() + ", ");
		sb.append("supplierName: " + this.getSupplierName() + ", ");
		sb.append("supplierState: " + this.getSupplierState() + ", ");
		sb.append("supplierStatus: " + this.getSupplierStatus());
		return sb.toString();
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((supplierId == null) ? 0 : supplierId.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Supplier other = (Supplier) obj;
		if (supplierCity == null) {
			if (other.supplierCity != null)
				return false;
		} else if (!supplierCity.equals(other.supplierCity))
			return false;
		if (supplierId == null) {
			if (other.supplierId != null)
				return false;
		} else if (!supplierId.equals(other.supplierId))
			return false;
		if (supplierName == null) {
			if (other.supplierName != null)
				return false;
		} else if (!supplierName.equals(other.supplierName))
			return false;
		if (supplierState == null) {
			if (other.supplierState != null)
				return false;
		} else if (!supplierState.equals(other.supplierState))
			return false;
		if (supplierStatus == null) {
			if (other.supplierStatus != null)
				return false;
		} else if (!supplierStatus.equals(other.supplierStatus))
			return false;
		return true;
	}

}
